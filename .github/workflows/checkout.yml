name: Checkout

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
      - "develop"
      - "feature/**"
      - "bugfix/**"
      - "hotfix/**"
      - "support/**"
    paths:
      - "pubspec.yaml"
      - "pubspec.lock"
      - "lib/**.dart"
      - "test/**.dart"
      - "example/**.dart"

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  checkout:
    name: "ðŸ§ª Check code with analysis, format, and tests"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./
    steps:
      - name: ðŸ“¦ Get the .github actions
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github

      - name: ðŸš‚ Setup Flutter and dependencies
        uses: ./.github/actions/setup
        with:
          flutter-version: 3.24.3

      - name: ðŸ‘· Install Dependencies
        timeout-minutes: 1
        run: |
          flutter pub get

      - name: ðŸš¦ Check code format
        id: check-format
        timeout-minutes: 1
        run: |
          find lib test -name "*.dart" ! -name "*.*.dart" -print0 | xargs -0 dart format --set-exit-if-changed --line-length 80 -o none

      - name: ðŸ“ˆ Check for Warnings
        id: check-analyzer
        timeout-minutes: 1
        run: |
          flutter analyze --fatal-infos --fatal-warnings lib/ test/

      - name: ðŸ§ª Unit & Widget tests
        timeout-minutes: 2
        run: |
          flutter test -r github --concurrency=6 --coverage test/control_test.dart

      - name: ðŸ“¥ Upload coverage to Codecov
        timeout-minutes: 1
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
      #   token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos

      - name: ðŸ“¥ Upload test report
        uses: actions/upload-artifact@v4
        if: (success() || failure()) && ${{ github.actor != 'dependabot[bot]' }}
        with:
          name: test-results
          path: reports/tests.json
